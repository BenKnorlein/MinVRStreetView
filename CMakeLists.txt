PROJECT(VRGoogleStreetView)

#SET BUILD-TYPE TO RELEASE IF NOT DEFINED
if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif(NOT CMAKE_BUILD_TYPE)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/")
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(NOT CMAKE_BUILD_TYPE MATCHES "^[Dd][Ee][Bb][Uu][Gg]")
        add_definitions(-DQT_NO_DEBUG_OUTPUT)
        set(CMAKE_BUILD_RELEASE TRUE)
else()
        set(CMAKE_BUILD_RELEASE FALSE)
endif()

set(CMAKE_C_FLAGS_RELEASE "-O3")

if(CMAKE_COMPILER_IS_GNUCXX OR APPLE)
       add_definitions( -Wno-deprecated-register)
endif()

message(STATUS "Building ${PROJECT_NAME} in ${CMAKE_BUILD_TYPE} mode")
cmake_minimum_required(VERSION 2.8.8)

#ADD QT4 SUPPORT
FIND_PACKAGE(Qt4 REQUIRED COMPONENTS QtCore QtGui QtOpenGL QtWebkit QtNetwork)
set(QT_USE_QTOPENGL TRUE)
INCLUDE(${QT_USE_FILE})
SET(CMAKE_AUTOMOC ON)

find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIR})

#ADD_DEFINITIONS(${QT_DEFINITIONS})

#MINVR
set(MINVR_INCLUDE_DIR "" CACHE STRING "")
set(MINVR_LIBRARY "" CACHE STRING "")
include_directories(${MINVR_INCLUDE_DIR})


SET(CMAKE_CURRENT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})

#HEADER AND SOURCE FILES FOR UI
SET(HEADERS 
	src/Frustum.h
	src/Patch.h	
	src/MYQApp.h
	src/PanoGrab.h
	src/ImageGrab.h
)
SET(SOURCES
	src/VRGoogleStreetView.cpp
	src/Frustum.cpp
	src/Patch.cpp
	src/MYQApp.cpp
	src/PanoGrab.cpp
	src/ImageGrab.cpp
)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/bin)


#BUILD AND LINK
ADD_EXECUTABLE(${PROJECT_NAME}
		${SOURCES} 
		${HEADERS} 
)


TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${MINVR_LIBRARY} ${QT_LIBRARIES} ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY})
